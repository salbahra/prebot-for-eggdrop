<?php
$timer = microtime();

/* Configuration */
$mysql['host']  = '';
$mysql['user']  = '';
$mysql['pass']  = '';
$mysql['db']    = '';

$nfopass = "secretpasswordhere";

//open mysql connection
$link = mysql_connect($mysql['host'], $mysql['user'], $mysql['pass']) or die(mysql_error());
mysql_select_db($mysql['db'], $link) or die(mysql_error());

$keys = array_keys($_GET);
$get = $keys[0];

list($id, $pass, $expiry) = explode(":", base64_decode($get));

if (!$_GET) die("You lack access to this site. <a href='mailto:help@email.com'>E-Mail</a> if you believe you should.");

if (md5($nfopass.$expiry) != $pass) die("Bad password.");
if (time() > $expiry) die("Hash expired.");

$result = mysql_query("SELECT `release`,`filename`,`nfo`,`time` FROM nfo WHERE id=$id LIMIT 1");
$line = mysql_fetch_object($result);
$line->nfo = base64_decode($line->nfo);
if (empty($line->filename)) $filename = $line->release.".nfo";
else $filename = trim($line->filename);
$header = array($filename, "Generated by prebot");

if ($_GET[$get] == "download") {
  header("Pragma: no-cache");
  header("Expires: 0");
  header("Cache-Control: must-revalidate, post-check=0, pre-check=0");
  header("Cache-Control: private", false);
  header("Content-Type: application/octet-stream");
  header("Content-Disposition: attachment; filename=\"$filename\";");
  header("Content-Length: ".strlen($line->nfo));
  echo $line->nfo;
  exit();
}

if (!$_GET[$get]=="image") {
echo <<<STOP
<script type="text/javascript" src="overlib.js"></script>
<script>
var remote = null;
window.name = "content";

function openRemote(contentURL,windowName,x,y) {
        widthHeight = 'height=' + y + ',width=' + x;
        remote = window.open(contentURL,windowName,widthHeight);
        remote.focus()
}

function closeRemote() {
        if (remote != null)  {
         remote.close();
         remote = null;
        }
}
</script>
<style type="text/css">
  body, pre {
    font-family: courier new, verdana, arial;
    font-size: 11px;
  }
  foot {
    font-family: verdana, arial;
    font-size: 8px;
  }
  a:link {
    text-decoration: none;
    font-family: verdana, arial;
    font-size: 10px;
    color: black;
  }
  a:visited {
    font-family: verdana, arial;
    font-size: 10px;
    text-decoration: none;
    color: red;
  }
  a:active { text-decoration: none }
  a:hover { text-decoration: underline; color: blue; }
</style>

STOP;

if (mysql_num_rows($result)<1) die("NFO not found.");
//$line = mysql_fetch_object($result);

$maplines = do_imagemap("urls", $line->nfo, $header);

if (is_array($maplines)) $maplines = ":".implode($maplines, ":").":";
$bmaplines = base64_encode($maplines);

echo "<html>\n<head>\n<title>".$line->release."</title>\n</head>\n<body>\n";
echo "<center><h1>".$line->release."</h1>\n";
//echo "<font size=2>".$line->filename."</font><br>\n";
//echo "<pre>".$line->nfo."</pre>\n</center>\n";

$iresult = mysql_query("SELECT `release`,`filename`,`image` FROM samplejpg WHERE id='$id' LIMIT 1;");

if (mysql_num_rows($iresult)>0) {
  $im = mysql_fetch_object($iresult);
  $size = get_dimensions($im->image);
  $s_size[] = round($size[0]/1.5,0);
  $s_size[] = round($size[1]/1.5,0);

  //list($id, $pass, $expiry, $mode, $scaled) = explode(":", base64_decode($get));
  $noscalehash = base64_encode("$id:$pass:$expiry:html:0");
  $scalehash = base64_encode("$id:$pass:$expiry:html:1");

  $size_use[] = $size[0]+10;
  $size_use[] = $size[1]+15;
  $s_size_use[] = $s_size[0]+10;
  $s_size_use[] = $s_size[1]+15;

  echo "<a href=\"javascript:openRemote('jpgview.php?$noscalehash', 'samplejpg', '{$size_use[0]}', '{$size_use[1]}')\">[Sample JPG ({$size[0]}x{$size[1]})]</a>\n";
  if (($size[0]>720) && ($size[1]>480))
    echo " or <a href=\"javascript:openRemote('jpgview.php?$scalehash', 'samplejpgscale', '{$s_size_use[0]}', '{$s_size_use[1]}')\">[Scaled JPG ({$s_size[0]}x{$s_size[1]})]</a><br>\n";
  else
    echo " -- \n";
}
echo "<a href='?$get=download'>[Download $filename]</a><br>\n";
echo "<img src='?$get=image&maplines=$bmaplines' USEMAP='#urls' border=0 /><br>\n";
echo "<br><br><foot>Generated in ".round(microtime_diff($timer, microtime()),2)." seconds.</foot><br>\n";
if ($line->time) echo "<foot>NFO added to database at: ".date("Y/m/d H:i:s T", $line->time)."</foot><br>\n";
}

else {
  if (!empty($_GET['maplines'])) {
    $maplines = base64_decode($_GET['maplines']);
  } else {
    $maplines = "";
  }
  $image = generateImage($header, $line->nfo, $maplines, findlinks($line->filename.implode($header).$line->nfo));
  header("Content-type: image/png");
  imagepng($image);
}

function generateImage($header, $nfo, $maplines, $highlight) {
  $split = explode("\n", $nfo);

  //init font
  $font = imageloadfont ("terminal.phpfont");
  $width=0;
  $height=0;
  $fontwidth = imagefontwidth($font);
  $fontheight = imagefontheight($font);

  foreach ($split as $line) {
    if ((strlen($line)*$fontwidth)>$width) $width=strlen($line)*$fontwidth;
    $height += $fontheight;
  }
  $width += $fontwidth*2;
  $height += $fontheight*3;

  $image = imagecreate($width, $height);

  //allocate colors
  $white = imagecolorallocate($image, 255,255,255);
  imagecolortransparent ($image, $white);
  $black = ImageColorAllocate ($image, 0, 0, 0);
  $blue = ImageColorAllocate ($image, 0, 0, 210);

  $i = $fontheight;

  if (is_array($header)) {
    foreach($header as $line) {
      $wid = ($width - ($fontwidth*strlen($line)))/2;
      imagestring($image, $font, $wid, $i, $line, $black);
      $i += $fontheight;
    }
  }

  //foreach ($split as $line) {
  for($j=0, $max=sizeOf($split); $j<$max; $j++) {
    $line = $split[$j];
    if(!eregi(":$j:", $maplines)) {
      imagestring ($image, $font, $fontwidth, $i, $line, $black);
    }
    else {
      foreach($highlight as $hl) {
        if ($match = stristr($line, $hl)) {
          $newline=explode($hl, $line);
    imagestring($image, $font, $fontwidth, $i, $newline[0], $black);
    imagestring($image, $font, strlen($newline[0])*$fontwidth+$fontwidth, $i, $hl, $blue);
    imagestring($image, $font, (strlen($newline[0])+strlen($hl))*$fontwidth+$fontwidth, $i, $newline[1], $black);
        }
      }
    }
    $i += $fontheight;
  }

  imagealphablending($image, TRUE);
  return $image;
}

function findlinks($string) {
  $regex[] = '/(http(s?):\/\/[^\r\n\ ),@"'.'"'.']+)/';
  $regex[] = '/(www\.[^.]+\.[^\r\n\ ),@"'."'".']+)/';
  $httpregex = 'http(s?):\/\/';
  $regex[] = '/([a-zA-Z0-9_\.\-])+\@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+/';
  $returns = array();

  foreach ($regex as $pattern) {
    if (preg_match_all($pattern, $string, $ar_buf)) {
      $urls = $ar_buf[0];
      foreach ($urls as $url) {
  if (!preg_match('/([a-zA-Z0-9_\.\-])+\@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+/', $url) && !eregi($httpregex, $url)) $url = "http://".$url;
        if (!checkDupe(trim($url), $returns)) $returns[sizeOf($returns)] = trim($url);
      }
    }
  }
  return $returns;
}

function checkDupe($string, $array) {
  if (!is_array($array)) return false;
  foreach($array as $line) {
    if ($string == $line) return true;
  }
  return false;
}

function do_imagemap($name, $nfo, $header='') {
  $return = array();
  $urls = findLinks($nfo);
  $split = explode("\n", $nfo);

  $font = imageloadfont ("terminal.phpfont");
  $fontwidth = imagefontwidth($font);
  $fontheight = imagefontheight($font);

  echo "<map name='$name'>\n";

  for($i=0, $max=sizeof($split); $i<$max; $i++) {
    $line = trim($split[$i]);
    if (is_array($urls)) {
    foreach($urls as $url) {
      if($match = stristr($line, $url)) {
  $len = strlen($url);
        if (preg_match('/([a-zA-Z0-9_\.\-])+\@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+/', $url)) $url = "mailto:".$url;
  else $title = strip_tags(@getTitle($url));
  $in = strlen($line)-strlen($match);
        //echo substr($line, $in, $len)."<br>\n";
  $top = ($i+1+(sizeOf($header)))*$fontheight;
        $bottom = ($i+2+(sizeOf($header)))*$fontheight;
  $left = ($in+1)*$fontwidth;
  $right = ($in+$len+2)*$fontwidth;
  echo "\t<area shape='rect' coords='$left,$top,$right,$bottom' href='$url' onmouseover=\"".(!empty($title) ? "return overlib('$title', CAPTION, 'Title');" : "return overlib('$url', CAPTION, ".(!substr($url, 0, 7) != "mailto:" ? "'URL'" : "'E-Mail'").");")."\" target='_blank' onmouseout=\"return nd();\">\n";
  $return[] = $i;
        unset($title);
      }
    }
    }
  }
  echo "</map>\n";
  return $return;
}

////////////////////////////////////////////////////////////////
/**
* Returns the page title
*
* @access   public
* @param        String      $url    the url
*
* @return   mixed      title string or false;
*/
function getTitle($url) {
    $fp = @fopen ($url, 'r');
    if ($fp) {
        stream_set_timeout($fp, 10);
        $page = '';
        while (!feof($fp)) {
            $page .= fgets ($fp, 1024);
            if (stristr($page, '<\title>')) {
                 fclose();
                 break;
            }
        }
        if (eregi("<title>(.*)</title>", $page, $out)) {
            return $out[1];
        }
    return false;
    }
}

////////////////////////////////////////////////////////////////

function microtime_diff($a, $b) {
  list($a_dec, $a_sec) = explode(" ", $a);
  list($b_dec, $b_sec) = explode(" ", $b);
  return $b_sec - $a_sec + $b_dec - $a_dec;
}

function get_dimensions($image) {
  $image = imagecreatefromstring($image);
  $size[0] = imagesx($image);
  $size[1] = imagesy($image);
  return $size;
}
?>
